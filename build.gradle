plugins {
	id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jar {
	baseName = 'my-spring-boot'
	version = '1.0.0'
	manifest {
		attributes "Manifest-Version": 1.0,
				'Main-Class': 'com.example.myspringboot.MySpringBootApplication'
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Greenwich.SR1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
//	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
//	implementation 'org.springframework.boot:spring-boot-starter-mail'
//	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1'
//	implementation 'org.springframework.cloud:spring-cloud-function-web'
//	implementation 'org.springframework.cloud:spring-cloud-starter'
//	implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
//	implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
//	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//	implementation 'org.springframework.cloud:spring-cloud-stream'
//	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
//	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
//	implementation 'org.springframework.cloud:spring-cloud-stream-reactive'
//	implementation 'org.springframework.kafka:spring-kafka'
	implementation('com.alibaba:druid-spring-boot-starter:1.1.17')
	implementation('com.googlecode.aviator:aviator:4.0.0-RC')
	implementation('com.alibaba:QLExpress:3.2.0')
	implementation('org.apache.commons:commons-jexl:2.1.1')
//	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java:5.7.26'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
//	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
//	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}